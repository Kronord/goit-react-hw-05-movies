{"version":3,"file":"static/js/HomePage.56e7923f.chunk.js","mappings":"mRAGaA,EAAQC,EAAAA,GAAAA,GAAH,gEAKLC,EAAOD,EAAAA,GAAAA,GAAH,wIAYJE,EAAOF,EAAAA,GAAAA,GAAH,6CAIJG,GAAaH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAH,8H,mBClBR,SAASK,IACtB,MCJa,WACb,OAAwBC,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAAS,QAArC,eAAOG,EAAP,KAAeC,EAAf,KAYE,OAVFC,EAAAA,EAAAA,YAAU,WACRD,EAAU,YACVE,EAAAA,EAAAA,MACGC,MAAK,SAAAC,GACJN,EAAQM,EAAIC,SACZL,EAAU,eAEXM,OAAM,SAAAC,GAAK,OAAIP,EAAU,iBAC3B,IAEM,CAAEH,KAAAA,EAAME,OAAAA,GDVQS,GAAjBX,EAAR,EAAQA,KAAME,EAAd,EAAcA,OACRU,GAAWC,EAAAA,EAAAA,MAEXC,GAAWC,EAAAA,EAAAA,KAAH,wEAKd,MAAe,SAAXb,GACK,SAACV,EAAD,6BAGM,aAAXU,GAEA,iCACE,SAACV,EAAD,8BACA,SAACG,EAAD,UACGK,GACCA,EAAKgB,KAAI,YAAwB,IAAtBC,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,MACnB,OACE,SAACzB,EAAD,WACE,SAACE,EAAD,CAAYwB,GAAE,kBAAaH,GAAMI,MAAO,CAACC,KAAMV,GAA/C,gBACGM,QADH,IACGA,EAAAA,EAAQC,KAFFF,WAYV,YAAXf,GACK,SAAC,EAAAqB,aAAD,CAAcC,MAAM,UAAUT,IAAKD,EAAUW,KAAK,SAG5C,aAAXvB,GACK,sEADT,I,uLE3CIwB,EAAM,mCAAZ,SAEeC,EAAc,GAAdA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA6BC,GAA7B,uFACyBC,MAAMD,GAD/B,YACQE,EADR,QAEkBC,GAFlB,gCAGYD,EAASE,OAHrB,+CAIMC,QAAQC,OAAO,IAAIC,MAAM,cAJ/B,0GAOO,IAAM9B,EAAmB,WAC9B,OAAOsB,EAAc,yDAAD,OAA0DD,KAGnEU,EAAc,SAAAC,GACzB,OAAOV,EAAc,qDAAD,OAAsDD,EAAtD,kBAAmEW,KAG5EC,EAAkB,SAAArB,GAC7B,OAAOU,EAAc,sCAAD,OAAuCV,EAAvC,oBAAqDS,KAG9Da,EAAkB,SAAAtB,GAC7B,OAAOU,EAAc,sCAAD,OAAuCV,EAAvC,4BAA6DS,KAGtEc,EAAkB,SAAAvB,GAC7B,OAAOU,EAAc,sCAAD,OAAuCV,EAAvC,4BAA6DS","sources":["components/HomePage/HomePage.style.js","components/HomePage/HomePage.jsx","components/Hooks/useFetchHomePage.js","components/services/FilmsApi.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Title = styled.h1`\n  margin-left: 20px;\n  color: orange;\n`;\n\nexport const Item = styled.li`\n  margin-bottom: 10px;\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n\n  &:hover {\n    color: orange;\n  }\n`;\n\nexport const List = styled.ul`\n  list-style: none;\n`;\n\nexport const StyledLink = styled(Link)`\n  text-decoration: none;\n  color: #000;\n  font-size: 18px;\n\n  &:hover {\n    color: orange;\n  }\n`;","import useFetchHomePage from 'components/Hooks/useFetchHomePage';\nimport { css } from '@emotion/react';\nimport { PacmanLoader } from 'react-spinners';\nimport { Title, Item, List, StyledLink } from './HomePage.style';\nimport { useLocation } from 'react-router-dom';\n\nexport default function HomePage() {\n  const { data, status } = useFetchHomePage();\n  const location = useLocation();\n\n  const override = css`\n    display: block;\n    margin: 200px auto;\n  `;\n\n  if (status === 'idle') {\n    return <Title>Trending today</Title>;\n  }\n\n  if (status === 'resolved') {\n    return (\n      <>\n        <Title>Trending today</Title>\n        <List>\n          {data &&\n            data.map(({id, name, title}) => {\n              return (\n                <Item key={id}>\n                  <StyledLink to={`/movies/${id}`} state={{from: location}}>\n                    {name ?? title}\n                  </StyledLink>\n                </Item>\n              );\n            })}\n        </List>\n      </>\n    );\n  }\n\n  if (status === 'pending') {\n    return <PacmanLoader color=\"#F5A623\" css={override} size=\"50px\" />;\n  }\n\n  if (status === 'rejected') { \n    return <h1>Sorry, we don`t have any information</h1>\n  };\n}\n","import { useState, useEffect } from 'react';\nimport { getTrendingFilms } from 'components/services/FilmsApi';\n\nexport default function useFetchHomePage() {\n  const [data, setData] = useState(null);\n  const [status, setStatus] = useState('idle');\n\n  useEffect(() => {\n    setStatus('pending');\n    getTrendingFilms()\n      .then(res => {\n        setData(res.results);\n        setStatus('resolved');\n      })\n      .catch(error => setStatus('rejected'));\n  }, []);\n    \n    return { data, status };\n};\n","const KEY = 'f792bc0e541efe7531ca1576bffe5aa2';\n\nasync function ErrorHandling(url) {\n  const response = await fetch(url);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n}\n\nexport const getTrendingFilms = () => {\n  return ErrorHandling(`https://api.themoviedb.org/3/trending/all/day?api_key=${KEY}`);\n};\n\nexport const searchFilms = query => {\n  return ErrorHandling(`https://api.themoviedb.org/3/search/movie?api_key=${KEY}&query=${query}`);\n};\n\nexport const getMovieDetails = id => {\n  return ErrorHandling(`https://api.themoviedb.org/3/movie/${id}?api_key=${KEY}`);\n};\n\nexport const getMovieCredits = id => {\n  return ErrorHandling(`https://api.themoviedb.org/3/movie/${id}/credits?api_key=${KEY}`);\n};\n\nexport const getMovieReviews = id => {\n  return ErrorHandling(`https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${KEY}`);\n};\n"],"names":["Title","styled","Item","List","StyledLink","Link","HomePage","useState","data","setData","status","setStatus","useEffect","getTrendingFilms","then","res","results","catch","error","useFetchHomePage","location","useLocation","override","css","map","id","name","title","to","state","from","PacmanLoader","color","size","KEY","ErrorHandling","url","fetch","response","ok","json","Promise","reject","Error","searchFilms","query","getMovieDetails","getMovieCredits","getMovieReviews"],"sourceRoot":""}