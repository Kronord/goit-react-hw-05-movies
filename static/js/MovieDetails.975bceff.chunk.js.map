{"version":3,"file":"static/js/MovieDetails.975bceff.chunk.js","mappings":"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","sources":["components/MoviesDetailsPage/MoviesDetails.style.js","components/MoviesDetailsPage/MoviesDetailsPage.jsx","components/services/FilmsApi.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.div`\n  display: flex;\n`;\n\nexport const StyledImage = styled.img`\n  display: block;\n  width: 300px;\n  margin-left: 20px;\n`;\n\nexport const Wrapper = styled(Container)`\n  flex-direction: column;\n`;\n\nexport const InfoLinkBox = styled(Wrapper)`\n  margin: 20px;\n  padding-left: 15px;\n  border: 3px solid orange;\n  border-radius: 5px;\n`;\n\nexport const DiscrBox = styled(Wrapper)`\n  width: 600px;\n  margin-left: 50px;\n`;\n\nexport const Title = styled.h2`\n  display: block;\n  margin-left: 20px;\n`;\n\nexport const Subtitle = styled.h3`\n  color: orange;\n`;\n\nexport const StyledLink = styled(Link)`\n  text-decoration: none;\n  color: #000;\n  font-size: 18px;\n  margin-bottom: 10px;\n\n  &:hover {\n    color: orange;\n  }\n`;\nexport const Button = styled.button`\n  width: 70px;\n  height: 29px;\n  margin: 10px 0 0 20px;\n  color: #fff;\n  border: 2px solid;\n  border-radius: 5px;\n  border-color: #ff8c00;\n  background-color: #ffa50088;\n  cursor: pointer;`\n","import { useParams, Outlet, useLocation, useNavigate } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getMovieDetails } from 'components/services/FilmsApi';\nimport { css } from '@emotion/react';\nimport { PacmanLoader } from 'react-spinners';\nimport {\n  Container,\n  StyledImage,\n  Wrapper,\n  InfoLinkBox,\n  DiscrBox,\n  Title,\n  Subtitle,\n  StyledLink,\n  Button,\n} from './MoviesDetails.style';\n\nexport default function MovieDetails() {\n  const { movieId } = useParams();\n  const [data, setData] = useState(null);\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [status, setStatus] = useState('idle');\n\n  const override = css`\n    display: block;\n    margin: 200px auto;\n  `;\n\n  useEffect(() => {\n    setStatus('pending');\n    getMovieDetails(movieId)\n      .then(res => {\n        console.log(res);\n        setData(res);\n        setStatus('resolved');\n      })\n      .catch(error => setStatus('rejected'));\n  }, [movieId]);\n\n  const onGoBack = () => {\n    if (location.state !== null) {\n      return navigate(-1);\n    }\n    navigate(`/`);\n  };\n\n  if (status === 'idle') {\n    return <h1>Welcome</h1>;\n  }\n\n  if (status === 'pending') {\n    return (\n      <PacmanLoader\n        color=\"#F5A623\"\n        css={override}\n        size=\"50px\"\n        speedMultiplier=\"4\"\n      />\n    );\n  }\n\n  if (status === 'resolved') {\n    const { title, popularity, release_date, poster_path, tagline, overview, genres } = data;\n    return (\n      <>\n        <Button type=\"button\" onClick={onGoBack}>\n          Go back\n        </Button>\n        <Title>\n          {title} &#40;{release_date.slice(0, 4)}&#41;\n        </Title>\n        <Container>\n          <Wrapper>\n            <StyledImage\n              src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n              alt=\"poster\"\n            />\n          </Wrapper>\n          <DiscrBox>\n            <p>Popularity: {popularity}</p>\n            <p>Tag Line: {tagline}</p>\n            <Subtitle>Overview</Subtitle>\n            <p>{overview}</p>\n            <Subtitle>Genres</Subtitle>\n            <p>{genres.map(el => el.name).join(', ')}</p>\n          </DiscrBox>\n        </Container>\n        <InfoLinkBox>\n          <Subtitle>Additional Information</Subtitle>\n          <StyledLink to={'cast'} state={{ search: 'label' }}>\n            Cast\n          </StyledLink>\n          <StyledLink to={'reviews'} state={{ search: 'label' }}>\n            Reviews\n          </StyledLink>\n        </InfoLinkBox>\n        <Outlet />\n      </>\n    );\n  }\n\n  if (status === 'rejected') {\n    return <h1>Sorry, we don`t found this movie</h1>;\n  }\n}\n","const KEY = 'f792bc0e541efe7531ca1576bffe5aa2';\n\nasync function ErrorHandling(url) {\n  const response = await fetch(url);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n}\n\nexport const getTrendingFilms = () => {\n  return ErrorHandling(`https://api.themoviedb.org/3/trending/all/day?api_key=${KEY}`);\n};\n\nexport const searchFilms = query => {\n  return ErrorHandling(`https://api.themoviedb.org/3/search/movie?api_key=${KEY}&query=${query}`);\n};\n\nexport const getMovieDetails = id => {\n  return ErrorHandling(`https://api.themoviedb.org/3/movie/${id}?api_key=${KEY}`);\n};\n\nexport const getMovieCredits = id => {\n  return ErrorHandling(`https://api.themoviedb.org/3/movie/${id}/credits?api_key=${KEY}`);\n};\n\nexport const getMovieReviews = id => {\n  return ErrorHandling(`https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${KEY}`);\n};\n"],"names":["Container","styled","StyledImage","Wrapper","InfoLinkBox","DiscrBox","Title","Subtitle","StyledLink","Link","Button","MovieDetails","movieId","useParams","useState","data","setData","navigate","useNavigate","location","useLocation","status","setStatus","override","css","useEffect","getMovieDetails","then","res","console","log","catch","error","PacmanLoader","color","size","speedMultiplier","title","popularity","release_date","poster_path","tagline","overview","genres","type","onClick","state","slice","src","alt","map","el","name","join","to","search","KEY","ErrorHandling","url","fetch","response","ok","json","Promise","reject","Error","getTrendingFilms","searchFilms","query","id","getMovieCredits","getMovieReviews"],"sourceRoot":""}