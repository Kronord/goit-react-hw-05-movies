{"version":3,"file":"static/js/MoviePage.037201b3.chunk.js","mappings":"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","sources":["components/MoviesPage/Movies.style.js","components/MoviesPage/MoviesPage.jsx","components/services/FilmsApi.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Item = styled.li`\n  margin-bottom: 10px;\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n\n  &:hover {\n    color: orange;\n  }\n`;\n\nexport const List = styled.ul`\n  list-style: none;\n`;\n\nexport const StyledLink = styled(Link)`\n  text-decoration: none;\n  color: #000;\n  font-size: 18px;\n\n  &:hover {\n    color: orange;\n  }\n`;\n\nexport const Input = styled.input`\n  display: inline-block;\n  margin: 0 10px 0 20px;\n  width: 200px;\n  font: inherit;\n  border: 2px solid;\n  border-radius: 5px;\n  border-color: orange;\n  font-size: 20px;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n`;\n\nexport const Button = styled.button`\n  width: 70px;\n  height: 29px;\n  color: #fff;\n  border: 2px solid;\n  border-radius: 5px;\n  border-color: #ff8c00;\n  background-color: #ffa50088;\n  cursor: pointer;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  align-items: center;\n  margin-top: 20px;\n`;\n","import { useState, useEffect } from 'react';\nimport { searchFilms } from 'components/services/FilmsApi';\nimport { css } from '@emotion/react';\nimport { PacmanLoader } from 'react-spinners';\nimport { Item, List, StyledLink, Input, Button, Form } from './Movies.style';\nimport { useLocation, useSearchParams } from 'react-router-dom';\n\nexport default function MoviesPage() {\n  const [data, setData] = useState();\n  const [film, setFilm] = useState('');\n  const [status, setStatus] = useState('idle');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n\n  const override = css`\n    display: block;\n    margin: 200px auto;\n  `;\n\n  useEffect(() => {\n    if (location.search !== '') {\n      setStatus('pending');\n      searchFilms(searchParams.get('query')).then(res => {\n        setData(res.results);\n        setStatus('resolved');\n      });\n    }\n  }, [location.search, searchParams]);\n\n  const handleChange = e => setFilm(e.target.value);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setSearchParams(`query=${film}`);\n    setStatus('pending');\n    searchFilms(film).then(res => {\n      setData(res.results);\n      setStatus('resolved');\n    });\n  };\n\n  if (status === 'idle') {\n    return (\n      <Form onSubmit={handleSubmit}>\n        <Input type=\"text\" value={film} onChange={handleChange} />\n        <Button type=\"submit\">Search</Button>\n      </Form>\n    );\n  }\n\n  if (status === 'pending') {\n    return (\n      <PacmanLoader\n        color=\"#F5A623\"\n        css={override}\n        size=\"50px\"\n        speedMultiplier=\"4\"\n      />\n    );\n  }\n\n  if (status === 'resolved') {\n    return (\n      <div>\n        <Form onSubmit={handleSubmit}>\n          <Input type=\"text\" value={film} onChange={handleChange} />\n          <Button type=\"submit\">Search</Button>\n        </Form>\n\n        <List>\n          {data.map(({id, name, title}) => {\n            return (\n              <Item key={id}>\n                <StyledLink\n                  to={{\n                    pathname: `${id}`,\n                  }}\n                  state={{\n                    from: location,\n                    search: location.search,\n                  }}\n                >\n                  {name ?? title}\n                </StyledLink>\n              </Item>\n            );\n          })}\n        </List>\n      </div>\n    );\n  }\n}\n","const KEY = 'f792bc0e541efe7531ca1576bffe5aa2';\n\nasync function ErrorHandling(url) {\n  const response = await fetch(url);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n}\n\nexport const getTrendingFilms = () => {\n  return ErrorHandling(`https://api.themoviedb.org/3/trending/all/day?api_key=${KEY}`);\n};\n\nexport const searchFilms = query => {\n  return ErrorHandling(`https://api.themoviedb.org/3/search/movie?api_key=${KEY}&query=${query}`);\n};\n\nexport const getMovieDetails = id => {\n  return ErrorHandling(`https://api.themoviedb.org/3/movie/${id}?api_key=${KEY}`);\n};\n\nexport const getMovieCredits = id => {\n  return ErrorHandling(`https://api.themoviedb.org/3/movie/${id}/credits?api_key=${KEY}`);\n};\n\nexport const getMovieReviews = id => {\n  return ErrorHandling(`https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${KEY}`);\n};\n"],"names":["Item","styled","List","StyledLink","Link","Input","Button","Form","MoviesPage","useState","data","setData","film","setFilm","status","setStatus","useSearchParams","searchParams","setSearchParams","location","useLocation","override","css","useEffect","search","searchFilms","get","then","res","results","handleChange","e","target","value","handleSubmit","preventDefault","onSubmit","type","onChange","PacmanLoader","color","size","speedMultiplier","map","id","name","title","to","pathname","state","from","KEY","ErrorHandling","url","fetch","response","ok","json","Promise","reject","Error","getTrendingFilms","query","getMovieDetails","getMovieCredits","getMovieReviews"],"sourceRoot":""}