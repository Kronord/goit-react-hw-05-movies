{"version":3,"file":"static/js/MoviePage.9749c3dc.chunk.js","mappings":"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","sources":["components/MoviesPage/Movies.style.js","components/MoviesPage/MoviesPage.jsx","components/Hooks/useFetchMoviesPage.js","components/services/FilmsApi.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Item = styled.li`\n  margin-bottom: 10px;\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n\n  &:hover {\n    color: orange;\n  }\n`;\n\nexport const List = styled.ul`\n  list-style: none;\n`;\n\nexport const StyledLink = styled(Link)`\n  text-decoration: none;\n  color: #000;\n  font-size: 18px;\n\n  &:hover {\n    color: orange;\n  }\n`;\n\nexport const Input = styled.input`\n  display: inline-block;\n  margin: 0 10px 0 20px;\n  width: 200px;\n  font: inherit;\n  border: 2px solid;\n  border-radius: 5px;\n  border-color: orange;\n  font-size: 20px;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n`;\n\nexport const Button = styled.button`\n  width: 70px;\n  height: 29px;\n  color: #fff;\n  border: 2px solid;\n  border-radius: 5px;\n  border-color: #ff8c00;\n  background-color: #ffa50088;\n  cursor: pointer;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  align-items: center;\n  margin-top: 20px;\n`;\n","import useFetchMoviesPage from 'components/Hooks/useFetchMoviesPage';\nimport { useState } from 'react';\nimport { css } from '@emotion/react';\nimport { PacmanLoader } from 'react-spinners';\nimport { Item, List, StyledLink, Input, Button, Form } from './Movies.style';\nimport { useSearchParams } from 'react-router-dom';\n\nexport default function MoviesPage() {\n  const [film, setFilm] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const { data, status, location } = useFetchMoviesPage(searchParams);\n\n  const override = css`\n    display: block;\n    margin: 200px auto;\n  `;\n\n  const handleChange = e => setFilm(e.target.value);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setSearchParams({query: `${film}`});\n  };\n\n  if (status === 'idle') {\n    return (\n      <Form onSubmit={handleSubmit}>\n        <Input type=\"text\" value={film} onChange={handleChange} />\n        <Button type=\"submit\">Search</Button>\n      </Form>\n    );\n  };\n\n  if (status === 'pending') {\n    return (\n      <PacmanLoader\n        color=\"#F5A623\"\n        css={override}\n        size=\"50px\"\n        speedMultiplier=\"4\"\n      />\n    );\n  };\n\n  if (status === 'resolved') {\n    return (\n      <div>\n        <Form onSubmit={handleSubmit}>\n          <Input type=\"text\" value={film} onChange={handleChange} />\n          <Button type=\"submit\">Search</Button>\n        </Form>\n\n        <List>\n          {data.map(({id, name, title}) => {\n            return (\n              <Item key={id}>\n                <StyledLink\n                  to={{\n                    pathname: `${id}`,\n                  }}\n                  state={{\n                    from: location,\n                  }}\n                >\n                  {name ?? title}\n                </StyledLink>\n              </Item>\n            );\n          })}\n        </List>\n      </div>\n    );\n  };\n\n  if (status === 'rejected') {\n    return <h1>Sorry, we don`t found this movie</h1>;\n  };\n}\n","import { searchFilms } from 'components/services/FilmsApi';\nimport { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nexport default function useFetchMoviesPage(searchParams) {\n  const [data, setData] = useState();\n  const [status, setStatus] = useState('idle');\n  const location = useLocation();\n\n  useEffect(() => {\n    if (location.search !== '') {\n      setStatus('pending');\n      searchFilms(searchParams.get('query'))\n        .then(res => {\n          setData(res.results);\n          setStatus('resolved');\n        })\n        .catch(error => setStatus('rejected'));\n    }\n  }, [location.search, searchParams]);\n    \n    return { data, status, location };\n};\n\n\n","const KEY = 'f792bc0e541efe7531ca1576bffe5aa2';\n\nasync function ErrorHandling(url) {\n  const response = await fetch(url);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n}\n\nexport const getTrendingFilms = () => {\n  return ErrorHandling(`https://api.themoviedb.org/3/trending/all/day?api_key=${KEY}`);\n};\n\nexport const searchFilms = query => {\n  return ErrorHandling(`https://api.themoviedb.org/3/search/movie?api_key=${KEY}&query=${query}`);\n};\n\nexport const getMovieDetails = id => {\n  return ErrorHandling(`https://api.themoviedb.org/3/movie/${id}?api_key=${KEY}`);\n};\n\nexport const getMovieCredits = id => {\n  return ErrorHandling(`https://api.themoviedb.org/3/movie/${id}/credits?api_key=${KEY}`);\n};\n\nexport const getMovieReviews = id => {\n  return ErrorHandling(`https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${KEY}`);\n};\n"],"names":["Item","styled","List","StyledLink","Link","Input","Button","Form","MoviesPage","useState","film","setFilm","useSearchParams","searchParams","setSearchParams","data","setData","status","setStatus","location","useLocation","useEffect","search","searchFilms","get","then","res","results","catch","error","useFetchMoviesPage","override","css","handleChange","e","target","value","handleSubmit","preventDefault","query","onSubmit","type","onChange","PacmanLoader","color","size","speedMultiplier","map","id","name","title","to","pathname","state","from","KEY","ErrorHandling","url","fetch","response","ok","json","Promise","reject","Error","getTrendingFilms","getMovieDetails","getMovieCredits","getMovieReviews"],"sourceRoot":""}